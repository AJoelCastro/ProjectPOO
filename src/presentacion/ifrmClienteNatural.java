/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JInternalFrame.java to edit this template
 */
package presentacion;
import entidades.*;
import datos.*;
import static datos.ListaClientes.*;
import java.util.*;
import javax.swing.*;

/**
 *
 * @author Asus
 */
public class ifrmClienteNatural extends javax.swing.JInternalFrame {

    /**
     * Creates new form ifrmClienteNatural
     */
    public ifrmClienteNatural(ListaClientes lista) {
        initComponents();
        this.lista=lista;
        txtFechaNacimiento.addFocusListener(new java.awt.event.FocusAdapter() {
    @Override
    public void focusGained(java.awt.event.FocusEvent evt) {
        if (!mensajeMostrado) {
            JOptionPane.showMessageDialog(txtFechaNacimiento, "El formato es dd-mm-aaaa", "Indicacion", 1);
            mensajeMostrado = true;
        }
    }
    });
    }
    private void activar (boolean estado){
            txtNombres.setEnabled(estado);
            txtApellidos.setEnabled(estado);
            txtFechaNacimiento.setEnabled(estado);
            txtIdentificacion.setEnabled(estado);
            txtDireccion.setEnabled(estado);
            txtTelefono.setEnabled(estado);
            txtEmail.setEnabled(estado);
            cmbEstadoCivil = new javax.swing.JComboBox<>();
            cmbEstadoCivil.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Soltero/a", "Casado/a", "Divorciado/a", "Viudo/a" }));
            cmbEstadoCivil.setEnabled(false);
          btnRegistrar.setEnabled(estado);
          btnNuevo.setEnabled(!estado);
    }
    
      private void limpiar(){

          txtNombres.setText(null);
            txtApellidos.setText(null);
            txtFechaNacimiento.setText(null);
            txtIdentificacion.setText(null);
            txtDireccion.setText(null);
            txtTelefono.setText(null);
            txtEmail.setText(null);
            
}
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        lblNombres = new javax.swing.JLabel();
        lblApellidos = new javax.swing.JLabel();
        lblDireccion = new javax.swing.JLabel();
        lblTelefono = new javax.swing.JLabel();
        lblEmail = new javax.swing.JLabel();
        lblEstadoCivil = new javax.swing.JLabel();
        txtNombres = new javax.swing.JTextField();
        txtApellidos = new javax.swing.JTextField();
        txtIdentificacion = new javax.swing.JTextField();
        txtDireccion = new javax.swing.JTextField();
        txtTelefono = new javax.swing.JTextField();
        txtEmail = new javax.swing.JTextField();
        btnNuevo = new javax.swing.JButton();
        btnSalir = new javax.swing.JButton();
        btnRegistrar = new javax.swing.JButton();
        lblFechaNacimeinto = new javax.swing.JLabel();
        txtFechaNacimiento = new javax.swing.JTextField();
        cmbIdentificacion = new javax.swing.JComboBox<>();
        cmbEstadoCivil = new javax.swing.JComboBox<>();

        setClosable(true);
        setIconifiable(true);
        setMaximizable(true);
        setResizable(true);
        setTitle("Cliente Natural");

        lblNombres.setText("Nombres");
        lblNombres.setToolTipText("");

        lblApellidos.setText("Apellidos");

        lblDireccion.setText("Direccion");

        lblTelefono.setText("Telefono");

        lblEmail.setText("Email");

        lblEstadoCivil.setText("Estado Civil");

        txtNombres.setEnabled(false);

        txtApellidos.setEnabled(false);

        txtIdentificacion.setEnabled(false);

        txtDireccion.setEnabled(false);

        txtTelefono.setEnabled(false);

        txtEmail.setEnabled(false);

        btnNuevo.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagenes/add_file.gif"))); // NOI18N
        btnNuevo.setMnemonic('U');
        btnNuevo.setText("Nuevo");
        btnNuevo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnNuevoActionPerformed(evt);
            }
        });

        btnSalir.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagenes/x.gif"))); // NOI18N
        btnSalir.setText("Salir");
        btnSalir.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSalirActionPerformed(evt);
            }
        });

        btnRegistrar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagenes/save.gif"))); // NOI18N
        btnRegistrar.setMnemonic('G');
        btnRegistrar.setText("Registrar");
        btnRegistrar.setEnabled(false);
        btnRegistrar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnRegistrarActionPerformed(evt);
            }
        });

        lblFechaNacimeinto.setText("Fecha Nacimiento");

        txtFechaNacimiento.setEnabled(false);
        txtFechaNacimiento.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtFechaNacimientoActionPerformed(evt);
            }
        });

        cmbIdentificacion.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "DNI", "Pasaporte" }));
        cmbIdentificacion.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cmbIdentificacionActionPerformed(evt);
            }
        });

        cmbEstadoCivil.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Soltero/a", "Casado/a", "Divorciado/a", "Viudo/a" }));

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(23, 23, 23)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(lblTelefono, javax.swing.GroupLayout.PREFERRED_SIZE, 73, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                        .addComponent(lblDireccion, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(lblApellidos, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(lblNombres, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(lblFechaNacimeinto, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addComponent(lblEmail, javax.swing.GroupLayout.PREFERRED_SIZE, 73, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lblEstadoCivil, javax.swing.GroupLayout.PREFERRED_SIZE, 73, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(cmbIdentificacion, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(26, 26, 26)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                        .addComponent(txtNombres)
                        .addComponent(txtApellidos, javax.swing.GroupLayout.DEFAULT_SIZE, 308, Short.MAX_VALUE)
                        .addComponent(txtIdentificacion, javax.swing.GroupLayout.PREFERRED_SIZE, 130, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(txtDireccion)
                        .addComponent(txtTelefono, javax.swing.GroupLayout.PREFERRED_SIZE, 128, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(txtEmail, javax.swing.GroupLayout.DEFAULT_SIZE, 308, Short.MAX_VALUE))
                    .addComponent(txtFechaNacimiento, javax.swing.GroupLayout.PREFERRED_SIZE, 130, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(cmbEstadoCivil, javax.swing.GroupLayout.PREFERRED_SIZE, 130, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(129, Short.MAX_VALUE))
            .addGroup(layout.createSequentialGroup()
                .addGap(67, 67, 67)
                .addComponent(btnNuevo, javax.swing.GroupLayout.PREFERRED_SIZE, 101, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(61, 61, 61)
                .addComponent(btnRegistrar)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 75, Short.MAX_VALUE)
                .addComponent(btnSalir, javax.swing.GroupLayout.PREFERRED_SIZE, 120, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(60, 60, 60))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(20, 20, 20)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblNombres)
                    .addComponent(txtNombres, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblApellidos)
                    .addComponent(txtApellidos, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(5, 5, 5)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(lblFechaNacimeinto)
                    .addComponent(txtFechaNacimiento, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtIdentificacion, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(cmbIdentificacion, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(lblDireccion)
                    .addComponent(txtDireccion, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtTelefono, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lblTelefono))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtEmail, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lblEmail))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblEstadoCivil)
                    .addComponent(cmbEstadoCivil, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 55, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnNuevo, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnRegistrar, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnSalir, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(58, 58, 58))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnSalirActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSalirActionPerformed
        this.dispose();
    }//GEN-LAST:event_btnSalirActionPerformed

    private void btnNuevoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnNuevoActionPerformed
       limpiar(); 
       activar(true);
        txtNombres.requestFocus();
    }//GEN-LAST:event_btnNuevoActionPerformed

    private void btnRegistrarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnRegistrarActionPerformed
         String nombre,apellido,identificacion,direccion,telefono,email,estadoCivil;
         String fechaN;
         int tipoCliente=1;
         nombre = txtNombres.getText();
         if (!ListaClientes.validacionLetras(nombre)) {
        JOptionPane.showMessageDialog(this, "El nombre solo debe contener letras y espacios.", "Error", 0);
        return; 
    }
         if (nombre == null || nombre.isEmpty()) {
            JOptionPane.showMessageDialog(this, "Por favor ingrese su nombre", "Indicacion", 2);
            return;
        }
         apellido = txtApellidos.getText();
         if (!ListaClientes.validacionLetras(apellido)) {
        JOptionPane.showMessageDialog(this, "El apellido solo debe contener letras y espacios.", "Error", 0);
        return; 
         }
         
         if (apellido == null || apellido.isEmpty()) {
            JOptionPane.showMessageDialog(this, "Por favor ingrese su Apellido", "Indicacion", 2);
            return;
        }
         
        
        fechaN = txtFechaNacimiento.getText();
        fechaN = lista.SolicitarFecha(fechaN);

    if (fechaN == null) {
        JOptionPane.showMessageDialog(this, "por favor ingrese su fecha de nacimiento en el formato dd-mm-aaaa.", "Indicacion", 2);
        return; 
    }

        String tipoIdentificacion = (String) cmbIdentificacion.getSelectedItem();
        identificacion = txtIdentificacion.getText();
        if (identificacion == null || identificacion.isEmpty()) {
                    JOptionPane.showMessageDialog(this, "Por favor ingrese su indentificacion", "Indicacion", 2);
                    return;
                }
        if ("DNI".equals(tipoIdentificacion)) {
            if (!validarDNI(identificacion)) {
                JOptionPane.showMessageDialog(this, "El DNI debe tener exactamente 8 dígitos.", "Error", 0);
                return;
            }
        } else if ("Pasaporte".equals(tipoIdentificacion)) {
            if (!validarPasaporte(identificacion)) {
                JOptionPane.showMessageDialog(this, "El pasaporte debe tener 1 letra seguida de 7 números.", "Error",0);
                return; 
            }
        }
        
        
        direccion = txtDireccion.getText();
        if (direccion == null || direccion.isEmpty()) {
            JOptionPane.showMessageDialog(this, "Por favor ingrese su direccion", "Indicacion", 2);
            return;
        }
        
        telefono = txtTelefono.getText();
        if (telefono == null || telefono.isEmpty()) {
            JOptionPane.showMessageDialog(this, "Por favor ingrese su telefono", "Indicacion", 2);
            return;
        }
        if (!ListaClientes.validacionTelefono(telefono)) {
            JOptionPane.showMessageDialog(this, "El teléfono debe contener exactamente 9 dígitos y solo números.", "Error",0);
            txtTelefono.requestFocus();
            return;
        }
        
        
        email = txtEmail.getText();
        if (email == null || email.isEmpty()) {
            JOptionPane.showMessageDialog(this, "Por favor ingrese su correo electronico", "Indicacion", 2);
            return;
        }
        estadoCivil = (String) cmbEstadoCivil.getSelectedItem();
        if (estadoCivil == null || estadoCivil.isEmpty()) {
            JOptionPane.showMessageDialog(this, "Por favor ingrese su telefono", "Indicacion", 2);
            return;
        }
        ClienteNatural clienteNatural = new ClienteNatural(identificacion, fechaN, estadoCivil, telefono, email, direccion, nombre, apellido, tipoCliente);
         lista.agregarCliente(clienteNatural);
        JOptionPane.showMessageDialog(this, "Los datos fueron registrados", "Registro de cliente", 1);
        
        limpiar();
        activar(false);
        btnNuevo.requestFocus();
        System.out.println(lista.toString());
    }//GEN-LAST:event_btnRegistrarActionPerformed

    private void cmbIdentificacionActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cmbIdentificacionActionPerformed
        String tipoIdentificacion = (String) cmbIdentificacion.getSelectedItem();
    String identificacion = txtIdentificacion.getText();

    if ("DNI".equals(tipoIdentificacion)) {
        if (!validarDNI(identificacion)) {
            JOptionPane.showMessageDialog(this, "El DNI debe tener exactamente 8 dígitos.", "Indicacion", 2);
            txtIdentificacion.requestFocus();
        } else {
            System.out.println("DNI válido: " + identificacion);
        }
    } else if ("Pasaporte".equals(tipoIdentificacion)) {
        if (!validarPasaporte(identificacion)) {
            JOptionPane.showMessageDialog(this, "El pasaporte debe tener 1 letra seguida de 7 números.", "Indicacion", 2);
            txtIdentificacion.requestFocus(); 
        } else {
            System.out.println("Pasaporte válido: " + identificacion);
        }
    }
    }//GEN-LAST:event_cmbIdentificacionActionPerformed

    private void txtFechaNacimientoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtFechaNacimientoActionPerformed
        txtFechaNacimiento.addFocusListener(new java.awt.event.FocusAdapter() {
    @Override
    public void focusGained(java.awt.event.FocusEvent evt) {
        JOptionPane.showMessageDialog(txtFechaNacimiento, "El formato es dd-mm-aaaa", "Indicacion", JOptionPane.QUESTION_MESSAGE);
    }
    });
        
    }//GEN-LAST:event_txtFechaNacimientoActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnNuevo;
    private javax.swing.JButton btnRegistrar;
    private javax.swing.JButton btnSalir;
    private javax.swing.JComboBox<String> cmbEstadoCivil;
    private javax.swing.JComboBox<String> cmbIdentificacion;
    private javax.swing.JLabel lblApellidos;
    private javax.swing.JLabel lblDireccion;
    private javax.swing.JLabel lblEmail;
    private javax.swing.JLabel lblEstadoCivil;
    private javax.swing.JLabel lblFechaNacimeinto;
    private javax.swing.JLabel lblNombres;
    private javax.swing.JLabel lblTelefono;
    private javax.swing.JTextField txtApellidos;
    private javax.swing.JTextField txtDireccion;
    private javax.swing.JTextField txtEmail;
    private javax.swing.JTextField txtFechaNacimiento;
    private javax.swing.JTextField txtIdentificacion;
    private javax.swing.JTextField txtNombres;
    private javax.swing.JTextField txtTelefono;
    // End of variables declaration//GEN-END:variables
private Cliente cliente;
private ListaClientes lista;
private boolean mensajeMostrado = false;
}
